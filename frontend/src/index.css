@import "tailwindcss";

/* Custom WordWise colors using Tailwind v4 @theme syntax */
@theme {
  --color-ice-100: #d9f0ff; /* Light ice blue for hover states */
}

/* Custom animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fadeIn {
  animation: fadeIn 0.2s ease-out;
}

/* TipTap placeholder styling */
.tiptap p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: #adb5bd;
  pointer-events: none;
  height: 0;
}

/* Ensure TipTap heading styles are applied */
.tiptap h1 {
  font-size: 2.25rem !important;
  line-height: 2.5rem !important;
  font-weight: 700 !important;
  margin-bottom: 1rem !important;
}

.tiptap h2 {
  font-size: 1.875rem !important;
  line-height: 2.25rem !important;
  font-weight: 700 !important;
  margin-bottom: 0.75rem !important;
}

.tiptap h3 {
  font-size: 1.5rem !important;
  line-height: 2rem !important;
  font-weight: 700 !important;
  margin-bottom: 0.5rem !important;
}

.tiptap p {
  font-size: 1rem !important;
  line-height: 1.75rem !important;
  margin-bottom: 1rem !important;
}

/* Suggestion mark styles */
.suggestion {
  cursor: pointer;
  text-decoration: underline;
  text-decoration-thickness: 2px;
  text-underline-offset: 2px;
  text-decoration-skip-ink: none;
  display: inline;
  white-space: normal;
  word-break: normal;
  overflow-wrap: normal;
  background: transparent; /* Ensure no default background */
  /* Add padding to increase hover target area */
  padding: 0.125rem 0;
  /* Ensure the element has a proper box model */
  position: relative;
}

/* Grammar suggestions - red underline */
.suggestion-grammar {
  text-decoration-color: #ef4444; /* red-500 */
}

/* Tone suggestions - yellow underline */
.suggestion-tone {
  text-decoration-color: #eab308; /* yellow-500 */
}

/* Persuasive suggestions - blue underline */
.suggestion-persuasive {
  text-decoration-color: #3b82f6; /* blue-500 */
}

/* Conciseness suggestions - purple underline */
.suggestion-conciseness {
  text-decoration-color: #a855f7; /* purple-500 */
}

/* Headline suggestions - green underline */
.suggestion-headline {
  text-decoration-color: #22c55e; /* green-500 */
  background: transparent; /* Ensure no default background */
}

/* More specific selector to override any conflicts */
span.suggestion.suggestion-headline {
  text-decoration-color: #22c55e !important; /* green-500 */
  background: transparent !important; /* Ensure no default background */
}

/* Readability suggestions - light cyan/sky blue underline */
.suggestion-readability {
  text-decoration-color: #06b6d4; /* cyan-500 - much lighter than the persuasive blue */
}

/* Vocabulary suggestions - orange underline */
.suggestion-vocabulary {
  text-decoration-color: #f97316; /* orange-500 */
}

/* A/B test suggestions - teal underline */
.suggestion-ab_test {
  text-decoration-color: #14b8a6; /* teal-500 */
}

/* Ensure nested formatting inherits underline */
.suggestion em,
.suggestion strong,
.suggestion u,
.suggestion s,
.suggestion code {
  text-decoration: inherit;
  text-decoration-color: inherit;
  text-decoration-thickness: inherit;
  text-underline-offset: inherit;
}

/* For split suggestions, we'll need JavaScript to handle group hover */
/* Add a class for JavaScript-controlled hover state */

/* Test that styles are loading */
/* REMOVED - This was for testing only, not for production
body::after {
  content: 'CSS v20 - Comprehensive edge case support';
  position: fixed;
  bottom: 0;
  right: 0;
  background: green;
  color: white;
  padding: 2px 5px;
  font-size: 10px;
  z-index: 9999;
  pointer-events: none;
}
*/

/* Simpler approach - apply background to any suggestion with hover class */
/* REMOVED - This was overriding specific type colors
span.suggestion-hover {
  background-color: rgba(59, 130, 246, 0.1) !important;
}
*/

/* Ensure nested elements also get the background color when parent has hover */
.suggestion-hover em,
.suggestion-hover strong,
.suggestion-hover u,
.suggestion-hover s,
.suggestion-hover code,
.suggestion-hover * {
  background-color: transparent !important; /* Don't double the background */
}

/* Then override for specific types - using more specific selectors */
span.suggestion.suggestion-grammar.suggestion-hover {
  background-color: rgb(254, 242, 242) !important; /* red-50 */
}

span.suggestion.suggestion-tone.suggestion-hover {
  background-color: rgb(254, 252, 232) !important; /* yellow-50 */
}

span.suggestion.suggestion-persuasive.suggestion-hover {
  background-color: rgb(219, 234, 254) !important; /* blue-100 */
}

span.suggestion.suggestion-conciseness.suggestion-hover {
  background-color: rgb(250, 245, 255) !important; /* purple-50 */
}

span.suggestion.suggestion-headline.suggestion-hover {
  background-color: rgb(240, 253, 244) !important; /* green-50 */
}

span.suggestion.suggestion-readability.suggestion-hover {
  background-color: rgb(207, 250, 254) !important; /* cyan-100 - very light cyan */
}

span.suggestion.suggestion-vocabulary.suggestion-hover {
  background-color: rgb(255, 247, 237) !important; /* orange-50 */
}

span.suggestion.suggestion-ab_test.suggestion-hover {
  background-color: rgb(240, 253, 250) !important; /* teal-50 */
}

/* Debug: Add regular CSS hover for testing */
.static-hover-test .suggestion:hover {
  background-color: rgba(255, 0, 0, 0.1) !important; /* light red for debugging */
}

/* Extra specificity for debugging */
/* REMOVED - This was also applying blue to all suggestions
.ProseMirror span.suggestion.suggestion-hover {
  background-color: rgba(59, 130, 246, 0.1) !important;
}
*/

.ProseMirror span.suggestion.suggestion-grammar.suggestion-hover {
  background-color: rgb(254, 242, 242) !important;
}

.ProseMirror span.suggestion.suggestion-tone.suggestion-hover {
  background-color: rgb(254, 252, 232) !important;
}

.ProseMirror span.suggestion.suggestion-persuasive.suggestion-hover {
  background-color: rgb(219, 234, 254) !important;
}

.ProseMirror span.suggestion.suggestion-headline.suggestion-hover {
  background-color: rgb(240, 253, 244) !important; /* green-50 - CRITICAL FIX */
}

.ProseMirror span.suggestion.suggestion-ab_test.suggestion-hover {
  background-color: rgb(240, 253, 250) !important;
}

/* Add CSS hover pseudo-class for suggestions */
/* REMOVED - Generic hover was overriding type-specific colors
.suggestion:hover {
  background-color: rgba(59, 130, 246, 0.1);
  cursor: pointer;
}
*/

/* Specific hover colors for each type */
/* Only apply hover styles when .interactive class is present to prevent initial load issues */
.interactive .suggestion-grammar:hover {
  background-color: rgb(254, 242, 242); /* red-50 */
  cursor: pointer;
}

.interactive .suggestion-tone:hover {
  background-color: rgb(254, 252, 232); /* yellow-50 */
  cursor: pointer;
}

.interactive .suggestion-persuasive:hover {
  background-color: rgb(219, 234, 254); /* blue-100 */
  cursor: pointer;
}

.interactive .suggestion-conciseness:hover {
  background-color: rgb(250, 245, 255); /* purple-50 */
  cursor: pointer;
}

.interactive .suggestion-headline:hover {
  background-color: rgb(240, 253, 244); /* green-50 */
  cursor: pointer;
}

.interactive .suggestion-readability:hover {
  background-color: rgb(207, 250, 254); /* cyan-100 */
  cursor: pointer;
}

.interactive .suggestion-vocabulary:hover {
  background-color: rgb(254, 226, 226); /* rose-100 */
  cursor: pointer;
}

.interactive .suggestion-ab_test:hover {
  background-color: rgb(240, 253, 250); /* teal-50 */
  cursor: pointer;
}

/* For split suggestions, we'll need JavaScript to handle group hover */
/* Add a class for JavaScript-controlled hover state */

/* Ensure continuous underlines even with nested elements */
.suggestion * {
  display: inline;
  border-bottom: inherit;
}

/* Fix for nested formatting elements */
.suggestion strong,
.suggestion em,
.suggestion u,
.suggestion s {
  border-bottom: none !important; /* Remove double underlines */
}

/* Fix for TipTap overriding text-decoration-color */
.ProseMirror .suggestion {
  text-decoration: underline !important;
  text-decoration-thickness: 2px !important;
  text-decoration-skip-ink: none !important;
}

/* Prevent ProseMirror selection styles on suggestions */
.ProseMirror .suggestion::selection,
.ProseMirror .suggestion::-moz-selection {
  background: transparent !important;
}

/* Prevent any default ProseMirror gapcursor or selection styling */
.ProseMirror-gapcursor {
  display: none !important;
}

.ProseMirror .ProseMirror-selectednode {
  outline: none !important;
  background: transparent !important;
}

/* Ensure each type has the correct color with high specificity */
.ProseMirror .suggestion.suggestion-grammar,
.ProseMirror span.suggestion.suggestion-grammar {
  text-decoration-color: #ef4444 !important; /* red-500 */
}

.ProseMirror .suggestion.suggestion-tone,
.ProseMirror span.suggestion.suggestion-tone {
  text-decoration-color: #eab308 !important; /* yellow-500 */
}

.ProseMirror .suggestion.suggestion-persuasive,
.ProseMirror span.suggestion.suggestion-persuasive {
  text-decoration-color: #3b82f6 !important; /* blue-500 */
}

.ProseMirror .suggestion.suggestion-conciseness,
.ProseMirror span.suggestion.suggestion-conciseness {
  text-decoration-color: #a855f7 !important; /* purple-500 */
}

.ProseMirror .suggestion.suggestion-headline,
.ProseMirror span.suggestion.suggestion-headline {
  text-decoration-color: #22c55e !important; /* green-500 - THIS IS THE FIX */
  background: transparent !important; /* Ensure no default background */
}

.ProseMirror .suggestion.suggestion-readability,
.ProseMirror span.suggestion.suggestion-readability {
  text-decoration-color: #06b6d4 !important; /* cyan-500 - clearly different from blue-500 */
}

.ProseMirror .suggestion.suggestion-vocabulary,
.ProseMirror span.suggestion.suggestion-vocabulary {
  text-decoration-color: #f97316 !important; /* orange-500 */
}

.ProseMirror .suggestion.suggestion-ab_test,
.ProseMirror span.suggestion.suggestion-ab_test {
  text-decoration-color: #14b8a6 !important; /* teal-500 */
}

/* Disable pointer events initially to prevent hover state bugs */
.no-pointer-events .suggestion {
  pointer-events: none !important;
}

/* Re-enable pointer events when ready */
.pointer-events-ready .suggestion {
  pointer-events: auto !important;
}

/* Reset any browser default contenteditable styles */
[contenteditable] {
  outline: none !important;
}

[contenteditable]:focus {
  outline: none !important;
}

/* Override any default ProseMirror mark styles */
.ProseMirror .ProseMirror-widget {
  background: transparent !important;
}

/* Ensure no default background on any marks */
.ProseMirror mark,
.ProseMirror [mark],
.ProseMirror span[mark] {
  background: transparent !important;
}

/* Ensure suggestions have no default focus or active styles */
.suggestion:focus,
.suggestion:active,
.suggestion:focus-visible,
.suggestion:focus-within {
  outline: none !important;
  background: transparent !important;
}

/* Remove any potential tap highlight on mobile */
.suggestion {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

/* Specific fix for headline suggestion initial background issue */
.ProseMirror span[data-suggestion-type="headline"]:not(.suggestion-hover) {
  background: transparent !important;
  background-color: transparent !important;
}

/* Double ensure no background on non-interactive state */
:not(.interactive) .suggestion-headline {
  background: transparent !important;
  background-color: transparent !important;
}

/* CRITICAL FIX: Ensure no initial background on any suggestion type */
.ProseMirror span[data-suggestion-id]:not(.suggestion-hover) {
  background: transparent !important;
  background-color: transparent !important;
}

/* Specific rule for headline suggestions without hover */
.ProseMirror .suggestion-headline:not(.suggestion-hover) {
  background: transparent !important;
  background-color: transparent !important;
}

/* Override any ProseMirror default styles that might add background */
.ProseMirror span.suggestion {
  background: transparent !important;
}

/* Only apply backgrounds when explicitly hovering */
.ProseMirror span.suggestion.suggestion-headline.suggestion-hover {
  background-color: rgb(240, 253, 244) !important; /* green-50 */
}

/* Ensure the underline color is always correct for headlines */
.ProseMirror .suggestion-headline,
.ProseMirror span.suggestion-headline,
span[data-suggestion-type="headline"] {
  text-decoration-color: #22c55e !important; /* green-500 */
}

/* FINAL FIX: Absolutely ensure no background on headline suggestions without hover */
/* Target all possible ways a headline suggestion might be rendered */
.suggestion-headline:not(.suggestion-hover),
span.suggestion-headline:not(.suggestion-hover),
.ProseMirror .suggestion-headline:not(.suggestion-hover),
.ProseMirror span.suggestion-headline:not(.suggestion-hover),
[data-suggestion-type="headline"]:not(.suggestion-hover),
.ProseMirror [data-suggestion-type="headline"]:not(.suggestion-hover) {
  background: transparent !important;
  background-color: transparent !important;
  background-image: none !important;
}

/* Ensure hover state only applies when actually hovering */
.suggestion-headline.suggestion-hover,
span.suggestion-headline.suggestion-hover,
.ProseMirror .suggestion-headline.suggestion-hover,
.ProseMirror span.suggestion-headline.suggestion-hover {
  background-color: rgb(240, 253, 244) !important; /* green-50 */
}

/* Fix for ProseMirror selection state causing background on last element */
.ProseMirror .ProseMirror-selectednode {
  background: transparent !important;
}

/* Ensure no background on any mark that might be in a selection state */
.ProseMirror ::selection {
  background: rgba(0, 123, 255, 0.2) !important; /* Light blue selection */
}

/* Remove any potential focus/active state backgrounds on suggestions */
.ProseMirror [data-suggestion-id]:focus,
.ProseMirror [data-suggestion-id]:active,
.ProseMirror [data-suggestion-id]:focus-visible {
  background: transparent !important;
  outline: none !important;
}

/* Fix for last suggestion in a line getting stuck with background */
/* COMMENTED OUT - This might be interfering with hover on last element
.ProseMirror span[data-suggestion-id]:last-child:not(.suggestion-hover) {
  background: transparent !important;
  background-color: transparent !important;
}
*/

/* Only apply background when suggestion-hover class is present */
.ProseMirror span[data-suggestion-id].suggestion-hover {
  /* Background will be set by type-specific rules */
}

/* Force re-render fix for stuck backgrounds */
.ProseMirror span[data-suggestion-type]:not(.suggestion-hover) {
  background: transparent !important;
  background-color: transparent !important;
  background-image: none !important;
  box-shadow: none !important;
}

/* Only apply backgrounds when explicitly hovering */
.ProseMirror span.suggestion.suggestion-headline.suggestion-hover {
  background-color: rgb(240, 253, 244) !important; /* green-50 */
}

/* CRITICAL FIX: Force hover styles with maximum specificity */
/* Target tone suggestions specifically */
.ProseMirror span[data-suggestion-type="tone"].suggestion-hover,
.ProseMirror span.suggestion-tone.suggestion-hover,
span.suggestion.suggestion-tone.suggestion-hover {
  background-color: rgb(254, 252, 232) !important; /* yellow-50 */
}

/* Target headline suggestions specifically */
.ProseMirror span[data-suggestion-type="headline"].suggestion-hover,
.ProseMirror span.suggestion-headline.suggestion-hover,
span.suggestion.suggestion-headline.suggestion-hover {
  background-color: rgb(240, 253, 244) !important; /* green-50 */
}

/* Also ensure grammar continues to work */
.ProseMirror span[data-suggestion-type="grammar"].suggestion-hover,
.ProseMirror span.suggestion-grammar.suggestion-hover,
span.suggestion.suggestion-grammar.suggestion-hover {
  background-color: rgb(254, 242, 242) !important; /* red-50 */
}

/* Target persuasive suggestions specifically */
.ProseMirror span[data-suggestion-type="persuasive"].suggestion-hover,
.ProseMirror span.suggestion-persuasive.suggestion-hover,
span.suggestion.suggestion-persuasive.suggestion-hover {
  background-color: rgb(219, 234, 254) !important; /* blue-100 */
}

/* Target readability suggestions specifically */
.ProseMirror span[data-suggestion-type="readability"].suggestion-hover,
.ProseMirror span.suggestion-readability.suggestion-hover,
span.suggestion.suggestion-readability.suggestion-hover {
  background-color: rgb(207, 250, 254) !important; /* cyan-100 */
}

/* Target vocabulary suggestions specifically */
.ProseMirror span[data-suggestion-type="vocabulary"].suggestion-hover,
.ProseMirror span.suggestion-vocabulary.suggestion-hover,
span.suggestion.suggestion-vocabulary.suggestion-hover {
  background-color: rgb(254, 226, 226) !important; /* rose-100 */
}

/* Target conciseness suggestions specifically */
.ProseMirror span[data-suggestion-type="conciseness"].suggestion-hover,
.ProseMirror span.suggestion-conciseness.suggestion-hover,
span.suggestion.suggestion-conciseness.suggestion-hover {
  background-color: rgb(243, 232, 255) !important; /* purple-100 */
}

/* Target ab_test suggestions specifically */
.ProseMirror span[data-suggestion-type="ab_test"].suggestion-hover,
.ProseMirror span.suggestion-ab_test.suggestion-hover,
span.suggestion.suggestion-ab_test.suggestion-hover {
  background-color: rgb(204, 251, 241) !important; /* teal-100 */
}

/* CSS Custom Properties for suggestion hover colors */
:root {
  --suggestion-grammar-hover: rgb(254, 242, 242);
  --suggestion-tone-hover: rgb(254, 252, 232);
  --suggestion-persuasive-hover: rgb(219, 234, 254);
  --suggestion-conciseness-hover: rgb(243, 232, 255);
  --suggestion-headline-hover: rgb(240, 253, 244);
  --suggestion-readability-hover: rgb(207, 250, 254); /* cyan-100 */
  --suggestion-vocabulary-hover: rgb(254, 226, 226);
  --suggestion-ab_test-hover: rgb(204, 251, 241);
}

/* Use CSS custom properties for hover backgrounds */
.ProseMirror span[data-suggestion-id].suggestion-hover {
  background-color: var(--suggestion-hover-bg, transparent) !important;
}

/* TEMPORARILY COMMENTED OUT - These rules are preventing hover from working
.ProseMirror:not(.hover-ready) span[data-suggestion-id] {
  background: transparent !important;
  pointer-events: none !important;
}

.ProseMirror.hover-ready span[data-suggestion-id] {
  pointer-events: auto !important;
}
*/

/* SIMPLIFIED APPROACH - Always allow pointer events on suggestions */
.ProseMirror span[data-suggestion-id] {
  pointer-events: auto !important;
  cursor: pointer;
}

/* Additional safeguard against initial hover states */
.ProseMirror span[data-suggestion-id][data-initial="true"] {
  background: transparent !important;
  background-color: transparent !important;
}

/* Ensure hover states are visible when applied */
.ProseMirror span[data-suggestion-type="grammar"][style*="background-color"] {
  background-color: var(--suggestion-grammar-hover) !important;
}

.ProseMirror span[data-suggestion-type="tone"][style*="background-color"] {
  background-color: var(--suggestion-tone-hover) !important;
}

.ProseMirror span[data-suggestion-type="headline"][style*="background-color"] {
  background-color: var(--suggestion-headline-hover) !important;
}

/* Transition for smooth hover effect */
.ProseMirror span[data-suggestion-id] {
  transition: background-color 0.2s ease;
}

/* Check if adjacent sibling selector is affecting hover */
.ProseMirror span[data-suggestion-id] + span[data-suggestion-id] {
  /* Adjacent suggestion span - REMOVED orange dashed border for debugging */
  /* border: 1px dashed orange; */
}

/* Ensure each suggestion type still has its proper hover color */
.ProseMirror span[data-suggestion-type="grammar"]:hover {
  background-color: rgb(254, 242, 242) !important; /* red-50 */
  outline: none !important;
}

.ProseMirror span[data-suggestion-type="tone"]:hover {
  background-color: rgb(254, 252, 232) !important; /* yellow-50 */
  outline: none !important;
}

.ProseMirror span[data-suggestion-type="persuasive"]:hover {
  background-color: rgb(219, 234, 254) !important; /* blue-100 */
  outline: none !important;
}

.ProseMirror span[data-suggestion-type="conciseness"]:hover {
  background-color: rgb(243, 232, 255) !important; /* purple-100 */
  outline: none !important;
}

.ProseMirror span[data-suggestion-type="headline"]:hover {
  background-color: rgb(240, 253, 244) !important; /* green-50 */
  outline: none !important;
}

.ProseMirror span[data-suggestion-type="readability"]:hover {
  background-color: rgb(207, 250, 254) !important; /* cyan-100 */
  outline: none !important;
}

.ProseMirror span[data-suggestion-type="vocabulary"]:hover {
  background-color: rgb(254, 226, 226) !important; /* rose-100 */
  outline: none !important;
}

.ProseMirror span[data-suggestion-type="ab_test"]:hover {
  background-color: rgb(204, 251, 241) !important; /* teal-100 */
  outline: none !important;
}

/* Force specificity for adjacent suggestions */
.ProseMirror p span[data-suggestion-id]:hover,
.ProseMirror div span[data-suggestion-id]:hover,
.ProseMirror * span[data-suggestion-id]:hover {
  /* Should apply to all suggestions regardless of position */
  opacity: 1 !important;
}

/* Remove any z-index issues */
.ProseMirror span[data-suggestion-id] {
  position: relative;
  z-index: 1;
}

/* Ensure no overflow is hiding hover states */
.ProseMirror p,
.ProseMirror div {
  overflow: visible !important;
}

/* Ensure suggestion elements capture mouse events properly */
.ProseMirror .suggestion,
.ProseMirror span[data-suggestion-id] {
  /* Make sure the element can receive pointer events */
  pointer-events: auto !important;
  /* Keep inline display for natural text flow */
  display: inline;
  position: relative;
  cursor: pointer;
  /* Ensure the element is interactive */
  user-select: text;
}

/* Specific fix for adjacent suggestions */
.ProseMirror span[data-suggestion-id] + span[data-suggestion-id] {
  /* Ensure adjacent suggestions are also hoverable */
  pointer-events: auto !important;
  margin-left: 0.1em; /* Small gap to ensure separate hover areas */
}

/* Debug: Make hover areas visible temporarily */
.ProseMirror span[data-suggestion-id] {
  /* REMOVED debug border - was causing visible borders on hover
  border: 1px solid transparent; */
  transition: background-color 0.1s ease;
}

/* REMOVED debug hover border
.ProseMirror span[data-suggestion-id]:hover {
  border-color: rgba(0, 0, 255, 0.3);
}
*/

/* Add invisible padding area for better hover detection */
.ProseMirror .suggestion::before,
.ProseMirror span[data-suggestion-id]::before {
  content: '';
  position: absolute;
  top: -4px;
  bottom: -4px;
  left: -2px;
  right: -2px;
  /* Invisible but increases hover area */
  background: transparent;
  pointer-events: auto;
  z-index: -1;
}
